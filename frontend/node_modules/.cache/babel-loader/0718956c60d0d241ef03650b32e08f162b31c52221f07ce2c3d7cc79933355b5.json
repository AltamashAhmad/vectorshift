{"ast":null,"code":"var _jsxFileName = \"/Users/altamashahmad96/Desktop/integrations_technical_assessment 3/frontend/src/integrations/hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post('http://localhost:8000/integrations/hubspot/authorize', formData);\n      const authUrl = response.data;\n\n      // Open OAuth window\n      const width = 600;\n      const height = 600;\n      const left = window.screenX + (window.outerWidth - width) / 2;\n      const top = window.screenY + (window.outerHeight - height) / 2;\n      const authWindow = window.open(authUrl, 'Hubspot Authorization', `width=${width},height=${height},left=${left},top=${top}`);\n\n      // Check periodically if the window is closed\n      const timer = setInterval(async () => {\n        if (authWindow.closed) {\n          clearInterval(timer);\n          await handleWindowClosed();\n        }\n      }, 500);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Hubspot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? () => {} : handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? 'Hubspot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 73\n        }, this) : 'Connect to Hubspot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(HubspotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","useEffect","axios","Box","Button","CircularProgress","jsxDEV","_jsxDEV","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authUrl","data","width","height","left","window","screenX","outerWidth","top","screenY","outerHeight","authWindow","open","timer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","sx","mt","children","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/altamashahmad96/Desktop/integrations_technical_assessment 3/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Box,\n    Button,\n    CircularProgress\n} from '@mui/material';\n\nexport const HubspotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post('http://localhost:8000/integrations/hubspot/authorize', formData);\n            const authUrl = response.data;\n            \n            // Open OAuth window\n            const width = 600;\n            const height = 600;\n            const left = window.screenX + (window.outerWidth - width) / 2;\n            const top = window.screenY + (window.outerHeight - height) / 2;\n            const authWindow = window.open(\n                authUrl,\n                'Hubspot Authorization',\n                `width=${width},height=${height},left=${left},top=${top}`\n            );\n\n            // Check periodically if the window is closed\n            const timer = setInterval(async () => {\n                if (authWindow.closed) {\n                    clearInterval(timer);\n                    await handleWindowClosed();\n                }\n            }, 500);\n\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    // Function to handle logic when the OAuth window closes\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n            const credentials = response.data; \n            if (credentials) {\n                setIsConnecting(false);\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'Hubspot' }));\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    useEffect(() => {\n        setIsConnected(integrationParams?.credentials ? true : false)\n    }, []);\n\n    return (\n        <Box sx={{mt: 2}}>\n            Parameters\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{mt: 2}}>\n                <Button \n                    variant='contained' \n                    onClick={isConnected ? () => {} : handleConnectClick}\n                    color={isConnected ? 'success' : 'primary'}\n                    disabled={isConnecting}\n                    style={{\n                        pointerEvents: isConnected ? 'none' : 'auto',\n                        cursor: isConnected ? 'default' : 'pointer',\n                        opacity: isConnected ? 1 : undefined\n                    }}\n                >\n                    {isConnected ? 'Hubspot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to Hubspot'}\n                </Button>\n            </Box>\n        </Box>\n    );\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}